{"version":3,"file":"js/draw.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;AChHA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AElDA;AACA;AACA;AACA;AACA","sources":["webpack://uvtsign/./app/javascript/draw.js","webpack://uvtsign/./app/javascript/submission_form/crop_canvas.js","webpack://uvtsign/webpack/bootstrap","webpack://uvtsign/webpack/runtime/chunk loaded","webpack://uvtsign/webpack/runtime/define property getters","webpack://uvtsign/webpack/runtime/hasOwnProperty shorthand","webpack://uvtsign/webpack/runtime/make namespace object","webpack://uvtsign/webpack/runtime/jsonp chunk loading","webpack://uvtsign/webpack/before-startup","webpack://uvtsign/webpack/startup","webpack://uvtsign/webpack/after-startup"],"sourcesContent":["import SignaturePad from 'signature_pad'\nimport { cropCanvasAndExportToPNG } from './submission_form/crop_canvas'\n\nwindow.customElements.define('draw-signature', class extends HTMLElement {\n  connectedCallback () {\n    const scale = 3\n\n    this.canvas.width = this.canvas.parentNode.clientWidth * scale\n    this.canvas.height = this.canvas.parentNode.clientHeight * scale\n\n    this.canvas.getContext('2d').scale(scale, scale)\n\n    this.pad = new SignaturePad(this.canvas)\n\n    this.pad.addEventListener('endStroke', () => {\n      this.updateSubmitButtonVisibility()\n    })\n\n    this.clearButton.addEventListener('click', (e) => {\n      e.preventDefault()\n\n      this.clearSignaturePad()\n    })\n\n    this.form.addEventListener('submit', (e) => {\n      e.preventDefault()\n\n      this.submitButton.disabled = true\n\n      this.submitImage().then((data) => {\n        this.valueInput.value = data.uuid\n\n        return fetch(this.form.action, {\n          method: 'PUT',\n          body: new FormData(this.form)\n        }).then((response) => {\n          this.form.classList.add('hidden')\n          this.success.classList.remove('hidden')\n\n          return response\n        })\n      }).finally(() => {\n        this.submitButton.disabled = false\n      })\n    })\n  }\n\n  clearSignaturePad () {\n    this.pad.clear()\n    this.updateSubmitButtonVisibility()\n  }\n\n  updateSubmitButtonVisibility () {\n    if (this.pad.isEmpty()) {\n      this.submitButton.style.display = 'none'\n      this.placeholderButton.style.display = 'block'\n    } else {\n      this.submitButton.style.display = 'block'\n      this.placeholderButton.style.display = 'none'\n    }\n  }\n\n  async submitImage () {\n    return new Promise((resolve, reject) => {\n      cropCanvasAndExportToPNG(this.canvas, { errorOnTooSmall: true }).then(async (blob) => {\n        const file = new File([blob], 'signature.png', { type: 'image/png' })\n\n        const formData = new FormData()\n\n        formData.append('file', file)\n        formData.append('submitter_slug', this.dataset.slug)\n        formData.append('name', 'attachments')\n\n        return fetch('/api/attachments', {\n          method: 'POST',\n          body: formData\n        }).then((resp) => resp.json()).then((attachment) => {\n          return resolve(attachment)\n        })\n      }).catch((error) => {\n        return reject(error)\n      })\n    })\n  }\n\n  get submitButton () {\n    return this.querySelector('button[type=\"submit\"]')\n  }\n\n  get clearButton () {\n    return this.querySelector('button[aria-label=\"Clear\"]')\n  }\n\n  get placeholderButton () {\n    return this.querySelector('button[disabled]')\n  }\n\n  get canvas () {\n    return this.querySelector('canvas')\n  }\n\n  get valueInput () {\n    return this.querySelector('input[name^=\"values\"]')\n  }\n\n  get form () {\n    return this.querySelector('form')\n  }\n\n  get success () {\n    return this.querySelector('#success')\n  }\n})\n","function cropCanvasAndExportToPNG (canvas, { errorOnTooSmall } = { errorOnTooSmall: false }) {\n  const ctx = canvas.getContext('2d')\n\n  const width = canvas.width\n  const height = canvas.height\n\n  let topmost = height\n  let bottommost = 0\n  let leftmost = width\n  let rightmost = 0\n\n  const imageData = ctx.getImageData(0, 0, width, height)\n  const pixels = imageData.data\n\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const pixelIndex = (y * width + x) * 4\n      const alpha = pixels[pixelIndex + 3]\n      if (alpha !== 0) {\n        topmost = Math.min(topmost, y)\n        bottommost = Math.max(bottommost, y)\n        leftmost = Math.min(leftmost, x)\n        rightmost = Math.max(rightmost, x)\n      }\n    }\n  }\n\n  const croppedWidth = rightmost - leftmost + 1\n  const croppedHeight = bottommost - topmost + 1\n\n  const croppedCanvas = document.createElement('canvas')\n  croppedCanvas.width = croppedWidth\n  croppedCanvas.height = croppedHeight\n  const croppedCtx = croppedCanvas.getContext('2d')\n\n  if (errorOnTooSmall && (croppedWidth < 20 || croppedHeight < 20)) {\n    return Promise.reject(new Error('Image too small'))\n  }\n\n  croppedCtx.drawImage(canvas, leftmost, topmost, croppedWidth, croppedHeight, 0, 0, croppedWidth, croppedHeight)\n\n  return new Promise((resolve, reject) => {\n    croppedCanvas.toBlob((blob) => {\n      if (blob) {\n        resolve(blob)\n      } else {\n        reject(new Error('Failed to create a PNG blob.'))\n      }\n    }, 'image/png')\n  })\n}\n\nexport { cropCanvasAndExportToPNG }\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"draw\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkuvtsign\"] = self[\"webpackChunkuvtsign\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"drawVendors-node_modules_signature_pad_dist_signature_pad_js\"], () => (__webpack_require__(\"./app/javascript/draw.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}