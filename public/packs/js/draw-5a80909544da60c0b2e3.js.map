{"version":3,"file":"js/draw-5a80909544da60c0b2e3.js","mappings":";mBAKA,MAAMA,EACF,WAAAC,CAAYC,EAAGC,EAAGC,EAAUC,GACxB,GAAIC,MAAMJ,IAAMI,MAAMH,GAClB,MAAM,IAAII,MAAM,sBAAsBL,MAAMC,MAEhDK,KAAKN,GAAKA,EACVM,KAAKL,GAAKA,EACVK,KAAKJ,SAAWA,GAAY,EAC5BI,KAAKH,KAAOA,GAAQI,KAAKC,KAC7B,CACA,UAAAC,CAAWC,GACP,OAAOC,KAAKC,KAAKD,KAAKE,IAAIP,KAAKN,EAAIU,EAAMV,EAAG,GAAKW,KAAKE,IAAIP,KAAKL,EAAIS,EAAMT,EAAG,GAChF,CACA,MAAAa,CAAOC,GACH,OAAQT,KAAKN,IAAMe,EAAMf,GACrBM,KAAKL,IAAMc,EAAMd,GACjBK,KAAKJ,WAAaa,EAAMb,UACxBI,KAAKH,OAASY,EAAMZ,IAC5B,CACA,YAAAa,CAAaN,GACT,OAAOJ,KAAKH,OAASO,EAAMP,KACrBG,KAAKG,WAAWC,IAAUJ,KAAKH,KAAOO,EAAMP,MAC5C,CACV,EAGJ,MAAMc,EACF,iBAAOC,CAAWC,EAAQC,GACtB,MAAMC,EAAKf,KAAKgB,uBAAuBH,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAAIE,GAClEE,EAAKjB,KAAKgB,uBAAuBH,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAAIK,GACxE,OAAO,IAAIP,EAAOE,EAAO,GAAIE,EAAIE,EAAIJ,EAAO,GAAIC,EAAOV,MAAOU,EAAOK,IACzE,CACA,6BAAOH,CAAuBI,EAAIC,EAAIC,GAClC,MAAMC,EAAMH,EAAG1B,EAAI2B,EAAG3B,EAChB8B,EAAMJ,EAAGzB,EAAI0B,EAAG1B,EAChB8B,EAAMJ,EAAG3B,EAAI4B,EAAG5B,EAChBgC,EAAML,EAAG1B,EAAI2B,EAAG3B,EAChBgC,GAAWP,EAAG1B,EAAI2B,EAAG3B,GAAK,EAA1BiC,GAAmCP,EAAGzB,EAAI0B,EAAG1B,GAAK,EAClDiC,GAAWP,EAAG3B,EAAI4B,EAAG5B,GAAK,EAA1BkC,GAAmCP,EAAG1B,EAAI2B,EAAG3B,GAAK,EAClDkC,EAAKxB,KAAKC,KAAKiB,EAAMA,EAAMC,EAAMA,GACjCM,EAAKzB,KAAKC,KAAKmB,EAAMA,EAAMC,EAAMA,GAGjCK,EAAID,GAAMD,EAAKC,GACfE,EAAUJ,GAHJD,EAAOC,GAGUG,EAAvBC,EAA6BJ,GAFvBD,EAAOC,GAE6BG,EAC1CE,EAAKZ,EAAG3B,EAAIsC,EACZE,EAAKb,EAAG1B,EAAIqC,EAClB,MAAO,CACHd,GAAI,IAAI1B,EAAMmC,EAAOM,EAAIN,EAAOO,GAChCnB,GAAI,IAAIvB,EAAMoC,EAAOK,EAAIL,EAAOM,GAExC,CACA,WAAAzC,CAAY0C,EAAYC,EAAUC,EAAUC,EAAUC,EAAYC,GAC9DxC,KAAKmC,WAAaA,EAClBnC,KAAKoC,SAAWA,EAChBpC,KAAKqC,SAAWA,EAChBrC,KAAKsC,SAAWA,EAChBtC,KAAKuC,WAAaA,EAClBvC,KAAKwC,SAAWA,CACpB,CACA,MAAAC,GAEI,IACIC,EACAC,EAFAF,EAAS,EAGb,IAAK,IAAIG,EAAI,EAAGA,GAJF,GAIcA,GAAK,EAAG,CAChC,MAAMC,EAAID,EALA,GAMJE,EAAK9C,KAAK+C,MAAMF,EAAG7C,KAAKmC,WAAWzC,EAAGM,KAAKqC,SAAS3C,EAAGM,KAAKoC,SAAS1C,EAAGM,KAAKsC,SAAS5C,GACtFsD,EAAKhD,KAAK+C,MAAMF,EAAG7C,KAAKmC,WAAWxC,EAAGK,KAAKqC,SAAS1C,EAAGK,KAAKoC,SAASzC,EAAGK,KAAKsC,SAAS3C,GAC5F,GAAIiD,EAAI,EAAG,CACP,MAAMK,EAAQH,EAAKJ,EACbQ,EAAQF,EAAKL,EACnBF,GAAUpC,KAAKC,KAAK2C,EAAQA,EAAQC,EAAQA,EAChD,CACAR,EAAKI,EACLH,EAAKK,CACT,CACA,OAAOP,CACX,CACA,KAAAM,CAAMF,EAAGzC,EAAOc,EAAIH,EAAII,GACpB,OAAQf,GAAS,EAAMyC,IAAM,EAAMA,IAAM,EAAMA,GACxC,EAAM3B,GAAM,EAAM2B,IAAM,EAAMA,GAAKA,EACnC,EAAM9B,GAAM,EAAM8B,GAAKA,EAAIA,EAC3B1B,EAAM0B,EAAIA,EAAIA,CACzB,EAGJ,MAAMM,EACF,WAAA1D,GACI,IACIO,KAAKoD,IAAM,IAAIC,WACnB,CACA,MAAOC,GACHtD,KAAKoD,IAAMG,QACf,CACJ,CACA,gBAAAC,CAAiBC,EAAMC,EAAUC,GAC7B3D,KAAKoD,IAAII,iBAAiBC,EAAMC,EAAUC,EAC9C,CACA,aAAAC,CAAcC,GACV,OAAO7D,KAAKoD,IAAIQ,cAAcC,EAClC,CACA,mBAAAC,CAAoBL,EAAMM,EAAUJ,GAChC3D,KAAKoD,IAAIU,oBAAoBL,EAAMM,EAAUJ,EACjD,EA0CJ,MAAMK,UAAqBb,EACvB,WAAA1D,CAAYwE,EAAQN,EAAU,CAAC,GAC3BO,QACAlE,KAAKiE,OAASA,EACdjE,KAAKmE,gBAAiB,EACtBnE,KAAKoE,UAAW,EAChBpE,KAAKqE,YAAc,GACnBrE,KAAKsE,MAAQ,GACbtE,KAAKuE,cAAgB,EACrBvE,KAAKwE,WAAa,EAClBxE,KAAKyE,iBAAoBZ,IACC,IAAlBA,EAAMa,SACN1E,KAAK2E,aAAad,EACtB,EAEJ7D,KAAK4E,iBAAoBf,IACrB7D,KAAK6E,kBAAkBhB,EAAM,EAEjC7D,KAAK8E,eAAkBjB,IACG,IAAlBA,EAAMa,SACN1E,KAAK+E,WAAWlB,EACpB,EAEJ7D,KAAKgF,kBAAqBnB,IAItB,GAHIA,EAAMoB,YACNpB,EAAMqB,iBAEyB,IAA/BrB,EAAMsB,cAAc1C,OAAc,CAClC,MAAM2C,EAAQvB,EAAMwB,eAAe,GACnCrF,KAAK2E,aAAaS,EACtB,GAEJpF,KAAKsF,iBAAoBzB,IACjBA,EAAMoB,YACNpB,EAAMqB,iBAEV,MAAME,EAAQvB,EAAMsB,cAAc,GAClCnF,KAAK6E,kBAAkBO,EAAM,EAEjCpF,KAAKuF,gBAAmB1B,IAEpB,GADyBA,EAAM2B,SAAWxF,KAAKiE,OACzB,CACdJ,EAAMoB,YACNpB,EAAMqB,iBAEV,MAAME,EAAQvB,EAAMwB,eAAe,GACnCrF,KAAK+E,WAAWK,EACpB,GAEJpF,KAAKyF,oBAAuB5B,IACxBA,EAAMqB,iBACNlF,KAAK2E,aAAad,EAAM,EAE5B7D,KAAK0F,mBAAsB7B,IACvB7D,KAAK6E,kBAAkBhB,EAAM,EAEjC7D,KAAK2F,kBAAqB9B,IAClB7D,KAAKmE,iBACLN,EAAMqB,iBACNlF,KAAK+E,WAAWlB,GACpB,EAEJ7D,KAAK4F,qBAAuBjC,EAAQiC,sBAAwB,GAC5D5F,KAAK6F,SAAWlC,EAAQkC,UAAY,GACpC7F,KAAK8F,SAAWnC,EAAQmC,UAAY,IACpC9F,KAAK+F,SAAY,aAAcpC,EAAUA,EAAQoC,SAAW,GAC5D/F,KAAKgG,YAAe,gBAAiBrC,EAAUA,EAAQqC,YAAc,EACrEhG,KAAKiG,QAAUtC,EAAQsC,SAAW,EAClCjG,KAAKkG,SAAWvC,EAAQuC,UAAY,QACpClG,KAAKmG,gBAAkBxC,EAAQwC,iBAAmB,gBAClDnG,KAAKoG,mBAAqBzC,EAAQyC,oBAAsB,cACxDpG,KAAKqG,qBAAwB,yBAA0B1C,EAAUA,EAAQ0C,qBAAuB,CAAC,EACjGrG,KAAK6E,kBAAoB7E,KAAK+F,SA/GtC,SAAkBO,EAAIC,EAAO,KACzB,IAEIC,EACAC,EACAC,EAJAC,EAAW,EACXC,EAAU,KAId,MAAMC,EAAQ,KACVF,EAAW1G,KAAKC,MAChB0G,EAAU,KACVJ,EAASF,EAAGQ,MAAML,EAAeC,GAC5BE,IACDH,EAAgB,KAChBC,EAAa,GACjB,EAEJ,OAAO,YAAoBK,GACvB,MAAM7G,EAAMD,KAAKC,MACX8G,EAAYT,GAAQrG,EAAMyG,GAkBhC,OAjBAF,EAAgBzG,KAChB0G,EAAaK,EACTC,GAAa,GAAKA,EAAYT,GAC1BK,IACAK,aAAaL,GACbA,EAAU,MAEdD,EAAWzG,EACXsG,EAASF,EAAGQ,MAAML,EAAeC,GAC5BE,IACDH,EAAgB,KAChBC,EAAa,KAGXE,IACNA,EAAUM,OAAOC,WAAWN,EAAOG,IAEhCR,CACX,CACJ,CA2EcT,CAAS/B,EAAaoD,UAAUC,cAAerH,KAAK+F,UACpD/B,EAAaoD,UAAUC,cAC7BrH,KAAKsH,KAAOrD,EAAOsD,WAAW,KAAMvH,KAAKqG,sBACzCrG,KAAKwH,QACLxH,KAAKyH,IACT,CACA,KAAAD,GACI,MAAQF,KAAMI,EAAG,OAAEzD,GAAWjE,KAC9B0H,EAAIC,UAAY3H,KAAKmG,gBACrBuB,EAAIE,UAAU,EAAG,EAAG3D,EAAO4D,MAAO5D,EAAO6D,QACzCJ,EAAIK,SAAS,EAAG,EAAG9D,EAAO4D,MAAO5D,EAAO6D,QACxC9H,KAAKsE,MAAQ,GACbtE,KAAKgI,OAAOhI,KAAKiI,yBACjBjI,KAAKoE,UAAW,CACpB,CACA,WAAA8D,CAAYC,EAASxE,EAAU,CAAC,GAC5B,OAAO,IAAIyE,SAAQ,CAACC,EAASC,KACzB,MAAMC,EAAQ,IAAIC,MACZC,EAAQ9E,EAAQ8E,OAASvB,OAAOwB,kBAAoB,EACpDb,EAAQlE,EAAQkE,OAAS7H,KAAKiE,OAAO4D,MAAQY,EAC7CX,EAASnE,EAAQmE,QAAU9H,KAAKiE,OAAO6D,OAASW,EAChDE,EAAUhF,EAAQgF,SAAW,EAC7BC,EAAUjF,EAAQiF,SAAW,EACnC5I,KAAKgI,OAAOhI,KAAKiI,yBACjBM,EAAMM,OAAS,KACX7I,KAAKsH,KAAKwB,UAAUP,EAAOI,EAASC,EAASf,EAAOC,GACpDO,GAAS,EAEbE,EAAMQ,QAAWzF,IACbgF,EAAOhF,EAAM,EAEjBiF,EAAMS,YAAc,YACpBT,EAAMU,IAAMd,EACZnI,KAAKoE,UAAW,CAAK,GAE7B,CACA,SAAA8E,CAAUzF,EAAO,YAAa0F,GAC1B,MACS,kBADD1F,GAE8B,kBAAnB0F,IACPA,OAAiBC,GAEd,6BAA6BC,KAAKrJ,KAAKsJ,MAAMH,QAEtB,kBAAnBA,IACPA,OAAiBC,GAEdpJ,KAAKiE,OAAOiF,UAAUzF,EAAM0F,GAE/C,CACA,EAAA1B,GACIzH,KAAKiE,OAAOsF,MAAMC,YAAc,OAChCxJ,KAAKiE,OAAOsF,MAAME,cAAgB,OAClCzJ,KAAKiE,OAAOsF,MAAMG,WAAa,OAC/B,MAAMC,EAAQ,YAAYC,KAAKC,UAAUC,YAAc,iBAAkBvG,SACrE2D,OAAO6C,eAAiBJ,EACxB3J,KAAKgK,wBAGLhK,KAAKiK,qBACD,iBAAkB/C,QAClBlH,KAAKkK,qBAGjB,CACA,GAAAC,GACInK,KAAKiE,OAAOsF,MAAMC,YAAc,OAChCxJ,KAAKiE,OAAOsF,MAAME,cAAgB,OAClCzJ,KAAKiE,OAAOsF,MAAMG,WAAa,OAC/B1J,KAAKiE,OAAOH,oBAAoB,cAAe9D,KAAKyF,qBACpDzF,KAAKiE,OAAOH,oBAAoB,cAAe9D,KAAK0F,oBACpD1F,KAAKiE,OAAOmG,cAActG,oBAAoB,YAAa9D,KAAK2F,mBAChE3F,KAAKiE,OAAOH,oBAAoB,YAAa9D,KAAKyE,kBAClDzE,KAAKiE,OAAOH,oBAAoB,YAAa9D,KAAK4E,kBAClD5E,KAAKiE,OAAOmG,cAActG,oBAAoB,UAAW9D,KAAK8E,gBAC9D9E,KAAKiE,OAAOH,oBAAoB,aAAc9D,KAAKgF,mBACnDhF,KAAKiE,OAAOH,oBAAoB,YAAa9D,KAAKsF,kBAClDtF,KAAKiE,OAAOH,oBAAoB,WAAY9D,KAAKuF,gBACrD,CACA,OAAA8E,GACI,OAAOrK,KAAKoE,QAChB,CACA,QAAAkG,CAASC,GAAa,MAAE/C,GAAQ,GAAS,CAAC,GAClCA,GACAxH,KAAKwH,QAETxH,KAAKwK,UAAUD,EAAavK,KAAKyK,WAAWC,KAAK1K,MAAOA,KAAK2K,SAASD,KAAK1K,OAC3EA,KAAKsE,MAAQtE,KAAKsE,MAAMsG,OAAOL,EACnC,CACA,MAAAM,GACI,OAAO7K,KAAKsE,KAChB,CACA,qBAAA2D,CAAsB6C,GAClB,MAAO,CACH5E,SAAU4E,GAAS,aAAcA,EAAQA,EAAM5E,SAAWlG,KAAKkG,SAC/DD,QAAS6E,GAAS,YAAaA,EAAQA,EAAM7E,QAAUjG,KAAKiG,QAC5DJ,SAAUiF,GAAS,aAAcA,EAAQA,EAAMjF,SAAW7F,KAAK6F,SAC/DC,SAAUgF,GAAS,aAAcA,EAAQA,EAAMhF,SAAW9F,KAAK8F,SAC/DF,qBAAsBkF,GAAS,yBAA0BA,EACnDA,EAAMlF,qBACN5F,KAAK4F,qBACXQ,mBAAoB0E,GAAS,uBAAwBA,EAC/CA,EAAM1E,mBACNpG,KAAKoG,mBAEnB,CACA,YAAAzB,CAAad,GAET,IADmB7D,KAAK4D,cAAc,IAAImH,YAAY,cAAe,CAAEC,OAAQnH,EAAOoB,YAAY,KAE9F,OAEJjF,KAAKmE,gBAAiB,EACtB,MAAM8G,EAAoBjL,KAAKiI,wBACzBiD,EAAgBC,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGH,GAAoB,CAAEpK,OAAQ,KACpFb,KAAKsE,MAAM+G,KAAKH,GAChBlL,KAAKgI,OAAOiD,GACZjL,KAAKqH,cAAcxD,EACvB,CACA,aAAAwD,CAAcxD,GACV,IAAK7D,KAAKmE,eACN,OAEJ,GAA0B,IAAtBnE,KAAKsE,MAAM7B,OAEX,YADAzC,KAAK2E,aAAad,GAGtB7D,KAAK4D,cAAc,IAAImH,YAAY,qBAAsB,CAAEC,OAAQnH,KACnE,MAAMnE,EAAImE,EAAMyH,QACV3L,EAAIkE,EAAM0H,QACV3L,OAA8BwJ,IAAnBvF,EAAMjE,SACjBiE,EAAMjE,cACUwJ,IAAhBvF,EAAM2H,MACF3H,EAAM2H,MACN,EACJzI,EAAQ/C,KAAKyL,aAAa/L,EAAGC,EAAGC,GAChC8L,EAAiB1L,KAAKsE,MAAMtE,KAAKsE,MAAM7B,OAAS,GAChDkJ,EAAaD,EAAe7K,OAC5B+K,EAAYD,EAAWlJ,OAAS,GAAKkJ,EAAWA,EAAWlJ,OAAS,GACpEoJ,IAAsBD,GACtB7I,EAAM5C,WAAWyL,IAAc5L,KAAKgG,YAEpCiF,EAAoBjL,KAAKiI,sBAAsByD,GACrD,IAAKE,IAAeA,IAAaC,EAAsB,CACnD,MAAMC,EAAQ9L,KAAK+L,UAAUhJ,EAAOkI,GAC/BW,EAGIE,GACL9L,KAAKyK,WAAWqB,EAAOb,GAHvBjL,KAAK2K,SAAS5H,EAAOkI,GAKzBU,EAAWN,KAAK,CACZxL,KAAMkD,EAAMlD,KACZH,EAAGqD,EAAMrD,EACTC,EAAGoD,EAAMpD,EACTC,SAAUmD,EAAMnD,UAExB,CACAI,KAAK4D,cAAc,IAAImH,YAAY,oBAAqB,CAAEC,OAAQnH,IACtE,CACA,UAAAkB,CAAWlB,GACF7D,KAAKmE,iBAGVnE,KAAKqH,cAAcxD,GACnB7D,KAAKmE,gBAAiB,EACtBnE,KAAK4D,cAAc,IAAImH,YAAY,YAAa,CAAEC,OAAQnH,KAC9D,CACA,oBAAAmG,GACIhK,KAAKmE,gBAAiB,EACtBnE,KAAKiE,OAAOT,iBAAiB,cAAexD,KAAKyF,qBACjDzF,KAAKiE,OAAOT,iBAAiB,cAAexD,KAAK0F,oBACjD1F,KAAKiE,OAAOmG,cAAc5G,iBAAiB,YAAaxD,KAAK2F,kBACjE,CACA,kBAAAsE,GACIjK,KAAKmE,gBAAiB,EACtBnE,KAAKiE,OAAOT,iBAAiB,YAAaxD,KAAKyE,kBAC/CzE,KAAKiE,OAAOT,iBAAiB,YAAaxD,KAAK4E,kBAC/C5E,KAAKiE,OAAOmG,cAAc5G,iBAAiB,UAAWxD,KAAK8E,eAC/D,CACA,kBAAAoF,GACIlK,KAAKiE,OAAOT,iBAAiB,aAAcxD,KAAKgF,mBAChDhF,KAAKiE,OAAOT,iBAAiB,YAAaxD,KAAKsF,kBAC/CtF,KAAKiE,OAAOT,iBAAiB,WAAYxD,KAAKuF,gBAClD,CACA,MAAAyC,CAAOrE,GACH3D,KAAKqE,YAAc,GACnBrE,KAAKuE,cAAgB,EACrBvE,KAAKwE,YAAcb,EAAQkC,SAAWlC,EAAQmC,UAAY,EAC1D9F,KAAKsH,KAAKK,UAAYhE,EAAQuC,SAC9BlG,KAAKsH,KAAK0E,yBAA2BrI,EAAQyC,kBACjD,CACA,YAAAqF,CAAa/L,EAAGC,EAAGC,GACf,MAAMqM,EAAOjM,KAAKiE,OAAOiI,wBACzB,OAAO,IAAI1M,EAAME,EAAIuM,EAAKE,KAAMxM,EAAIsM,EAAKG,IAAKxM,GAAU,IAAIK,MAAOoM,UACvE,CACA,SAAAN,CAAUhJ,EAAOY,GACb,MAAM,YAAEU,GAAgBrE,KAExB,GADAqE,EAAYgH,KAAKtI,GACbsB,EAAY5B,OAAS,EAAG,CACG,IAAvB4B,EAAY5B,QACZ4B,EAAYiI,QAAQjI,EAAY,IAEpC,MAAMvD,EAASd,KAAKuM,sBAAsBlI,EAAY,GAAIA,EAAY,GAAIV,GACpEmI,EAAQnL,EAAOC,WAAWyD,EAAavD,GAE7C,OADAuD,EAAYmI,QACLV,CACX,CACA,OAAO,IACX,CACA,qBAAAS,CAAsBpK,EAAYG,EAAUqB,GACxC,MAAM8I,EAAW9I,EAAQiC,qBAAuBtD,EAAS5B,aAAayB,IACjE,EAAIwB,EAAQiC,sBAAwB5F,KAAKuE,cACxCmI,EAAW1M,KAAK2M,aAAaF,EAAU9I,GACvC7C,EAAS,CACXK,IAAKuL,EACLtM,MAAOJ,KAAKwE,YAIhB,OAFAxE,KAAKuE,cAAgBkI,EACrBzM,KAAKwE,WAAakI,EACX5L,CACX,CACA,YAAA6L,CAAaF,EAAU9I,GACnB,OAAOtD,KAAKuM,IAAIjJ,EAAQmC,UAAY2G,EAAW,GAAI9I,EAAQkC,SAC/D,CACA,iBAAAgH,CAAkBnN,EAAGC,EAAGkI,GACpB,MAAMH,EAAM1H,KAAKsH,KACjBI,EAAIoF,OAAOpN,EAAGC,GACd+H,EAAIqF,IAAIrN,EAAGC,EAAGkI,EAAO,EAAG,EAAIxH,KAAK2M,IAAI,GACrChN,KAAKoE,UAAW,CACpB,CACA,UAAAqG,CAAWqB,EAAOnI,GACd,MAAM+D,EAAM1H,KAAKsH,KACX2F,EAAanB,EAAMtJ,SAAWsJ,EAAMvJ,WACpC2K,EAAwC,EAA5B7M,KAAK8M,KAAKrB,EAAMrJ,UAClCiF,EAAI0F,YACJ1F,EAAIC,UAAYhE,EAAQuC,SACxB,IAAK,IAAItD,EAAI,EAAGA,EAAIsK,EAAWtK,GAAK,EAAG,CACnC,MAAMC,EAAID,EAAIsK,EACRG,EAAKxK,EAAIA,EACTyK,EAAMD,EAAKxK,EACX0K,EAAI,EAAI1K,EACR2K,EAAKD,EAAIA,EACTE,EAAMD,EAAKD,EACjB,IAAI7N,EAAI+N,EAAM3B,EAAM3J,WAAWzC,EAC/BA,GAAK,EAAI8N,EAAK3K,EAAIiJ,EAAMzJ,SAAS3C,EACjCA,GAAK,EAAI6N,EAAIF,EAAKvB,EAAM1J,SAAS1C,EACjCA,GAAK4N,EAAMxB,EAAMxJ,SAAS5C,EAC1B,IAAIC,EAAI8N,EAAM3B,EAAM3J,WAAWxC,EAC/BA,GAAK,EAAI6N,EAAK3K,EAAIiJ,EAAMzJ,SAAS1C,EACjCA,GAAK,EAAI4N,EAAIF,EAAKvB,EAAM1J,SAASzC,EACjCA,GAAK2N,EAAMxB,EAAMxJ,SAAS3C,EAC1B,MAAMkI,EAAQxH,KAAKqN,IAAI5B,EAAMvJ,WAAa+K,EAAML,EAAYtJ,EAAQmC,UACpE9F,KAAK6M,kBAAkBnN,EAAGC,EAAGkI,EACjC,CACAH,EAAIiG,YACJjG,EAAIkG,MACR,CACA,QAAAjD,CAAS5H,EAAOY,GACZ,MAAM+D,EAAM1H,KAAKsH,KACXO,EAAQlE,EAAQsC,QAAU,EAC1BtC,EAAQsC,SACPtC,EAAQkC,SAAWlC,EAAQmC,UAAY,EAC9C4B,EAAI0F,YACJpN,KAAK6M,kBAAkB9J,EAAMrD,EAAGqD,EAAMpD,EAAGkI,GACzCH,EAAIiG,YACJjG,EAAIC,UAAYhE,EAAQuC,SACxBwB,EAAIkG,MACR,CACA,SAAApD,CAAUD,EAAasD,EAAWC,GAC9B,IAAK,MAAMhD,KAASP,EAAa,CAC7B,MAAM,OAAE1J,GAAWiK,EACbG,EAAoBjL,KAAKiI,sBAAsB6C,GACrD,GAAIjK,EAAO4B,OAAS,EAChB,IAAK,IAAIsL,EAAI,EAAGA,EAAIlN,EAAO4B,OAAQsL,GAAK,EAAG,CACvC,MAAMC,EAAanN,EAAOkN,GACpBhL,EAAQ,IAAIvD,EAAMwO,EAAWtO,EAAGsO,EAAWrO,EAAGqO,EAAWpO,SAAUoO,EAAWnO,MAC1E,IAANkO,GACA/N,KAAKgI,OAAOiD,GAEhB,MAAMa,EAAQ9L,KAAK+L,UAAUhJ,EAAOkI,GAChCa,GACA+B,EAAU/B,EAAOb,EAEzB,MAGAjL,KAAKgI,OAAOiD,GACZ6C,EAAQjN,EAAO,GAAIoK,EAE3B,CACJ,CACA,KAAA3B,EAAM,uBAAE2E,GAAyB,GAAU,CAAC,GACxC,MAAM1D,EAAcvK,KAAKsE,MACnBmE,EAAQpI,KAAKuM,IAAI1F,OAAOwB,kBAAoB,EAAG,GAG/CwF,EAAOlO,KAAKiE,OAAO4D,MAAQY,EAC3B0F,EAAOnO,KAAKiE,OAAO6D,OAASW,EAC5B2F,EAAM7K,SAAS8K,gBAAgB,6BAA8B,OAMnE,GALAD,EAAIE,aAAa,QAAS,8BAC1BF,EAAIE,aAAa,cAAe,gCAChCF,EAAIE,aAAa,UAAW,OAAmBJ,KAAQC,KACvDC,EAAIE,aAAa,QAASJ,EAAKK,YAC/BH,EAAIE,aAAa,SAAUH,EAAKI,YAC5BN,GAA0BjO,KAAKmG,gBAAiB,CAChD,MAAM8F,EAAO1I,SAASiL,cAAc,QACpCvC,EAAKqC,aAAa,QAAS,QAC3BrC,EAAKqC,aAAa,SAAU,QAC5BrC,EAAKqC,aAAa,OAAQtO,KAAKmG,iBAC/BiI,EAAIK,YAAYxC,EACpB,CA2BA,OA1BAjM,KAAKwK,UAAUD,GAAa,CAACuB,GAAS5F,eAClC,MAAMwI,EAAOnL,SAASiL,cAAc,QACpC,IAAK1O,MAAMgM,EAAMzJ,SAAS3C,KACrBI,MAAMgM,EAAMzJ,SAAS1C,KACrBG,MAAMgM,EAAM1J,SAAS1C,KACrBI,MAAMgM,EAAM1J,SAASzC,GAAI,CAC1B,MAAMgP,EAAO,KAAK7C,EAAM3J,WAAWzC,EAAEkP,QAAQ,MAAM9C,EAAM3J,WAAWxC,EAAEiP,QAAQ,QACrE9C,EAAMzJ,SAAS3C,EAAEkP,QAAQ,MAAM9C,EAAMzJ,SAAS1C,EAAEiP,QAAQ,MAC1D9C,EAAM1J,SAAS1C,EAAEkP,QAAQ,MAAM9C,EAAM1J,SAASzC,EAAEiP,QAAQ,MACxD9C,EAAMxJ,SAAS5C,EAAEkP,QAAQ,MAAM9C,EAAMxJ,SAAS3C,EAAEiP,QAAQ,KAC/DF,EAAKJ,aAAa,IAAKK,GACvBD,EAAKJ,aAAa,gBAAkC,KAAjBxC,EAAMtJ,UAAiBoM,QAAQ,IAClEF,EAAKJ,aAAa,SAAUpI,GAC5BwI,EAAKJ,aAAa,OAAQ,QAC1BI,EAAKJ,aAAa,iBAAkB,SACpCF,EAAIK,YAAYC,EACpB,KACD,CAAC3L,GAASmD,WAAUD,UAASJ,WAAUC,eACtC,MAAM+I,EAAStL,SAASiL,cAAc,UAChCM,EAAO7I,EAAU,EAAIA,GAAWJ,EAAWC,GAAY,EAC7D+I,EAAOP,aAAa,IAAKQ,EAAKP,YAC9BM,EAAOP,aAAa,KAAMvL,EAAMrD,EAAE6O,YAClCM,EAAOP,aAAa,KAAMvL,EAAMpD,EAAE4O,YAClCM,EAAOP,aAAa,OAAQpI,GAC5BkI,EAAIK,YAAYI,EAAO,IAEpBT,EAAIW,SACf,EC/iBJ7H,OAAO8H,eAAeC,OAAO,iBAAkB,cAAcC,YAC3DC,iBAAAA,GAGEnP,KAAKiE,OAAO4D,MAFE,EAEM7H,KAAKiE,OAAOmL,WAAWC,YAC3CrP,KAAKiE,OAAO6D,OAHE,EAGO9H,KAAKiE,OAAOmL,WAAWE,aAE5CtP,KAAKiE,OAAOsD,WAAW,MAAMgI,MALf,KAOdvP,KAAKwP,IAAM,IAAIxL,EAAahE,KAAKiE,QAEjCjE,KAAKwP,IAAIhM,iBAAiB,aAAa,KACrCxD,KAAKyP,8BAA8B,IAGrCzP,KAAK0P,YAAYlM,iBAAiB,SAAUmM,IAC1CA,EAAEzK,iBAEFlF,KAAK4P,mBAAmB,IAG1B5P,KAAK6P,KAAKrM,iBAAiB,UAAWmM,IACpCA,EAAEzK,iBAEFlF,KAAK8P,aAAaC,UAAW,EAE7B/P,KAAKgQ,cAAcC,MAAMC,IACvBlQ,KAAKmQ,WAAWC,MAAQF,EAAKG,KAEtBC,MAAMtQ,KAAK6P,KAAKU,OAAQ,CAC7BC,OAAQ,MACRC,KAAM,IAAIC,SAAS1Q,KAAK6P,QACvBI,MAAMU,IACP3Q,KAAK6P,KAAKe,UAAUC,IAAI,UACxB7Q,KAAK8Q,QAAQF,UAAUG,OAAO,UAEvBJ,QAERK,SAAQ,KACThR,KAAK8P,aAAaC,UAAW,CAAK,GAClC,GAEN,CAEAH,iBAAAA,GACE5P,KAAKwP,IAAIhI,QACTxH,KAAKyP,8BACP,CAEAA,4BAAAA,GACMzP,KAAKwP,IAAInF,WACXrK,KAAK8P,aAAavG,MAAM0H,QAAU,OAClCjR,KAAKkR,kBAAkB3H,MAAM0H,QAAU,UAEvCjR,KAAK8P,aAAavG,MAAM0H,QAAU,QAClCjR,KAAKkR,kBAAkB3H,MAAM0H,QAAU,OAE3C,CAEA,iBAAMjB,GACJ,OAAO,IAAI5H,SAAQ,CAACC,EAASC,MC/DjC,SAAmCrE,GAAQ,gBAAEkN,GAAoB,CAAEA,iBAAiB,IAClF,MAAMzJ,EAAMzD,EAAOsD,WAAW,MAExBM,EAAQ5D,EAAO4D,MACfC,EAAS7D,EAAO6D,OAEtB,IAAIsJ,EAAUtJ,EACVuJ,EAAa,EACbC,EAAWzJ,EACX0J,EAAY,EAEhB,MACMC,EADY9J,EAAI+J,aAAa,EAAG,EAAG5J,EAAOC,GACvBoI,KAEzB,IAAK,IAAIvQ,EAAI,EAAGA,EAAImI,EAAQnI,IAC1B,IAAK,IAAID,EAAI,EAAGA,EAAImI,EAAOnI,IAGX,IADA8R,EADuB,GAAjB7R,EAAIkI,EAAQnI,GACE,KAEhC0R,EAAU/Q,KAAKqN,IAAI0D,EAASzR,GAC5B0R,EAAahR,KAAKuM,IAAIyE,EAAY1R,GAClC2R,EAAWjR,KAAKqN,IAAI4D,EAAU5R,GAC9B6R,EAAYlR,KAAKuM,IAAI2E,EAAW7R,IAKtC,MAAMgS,EAAeH,EAAYD,EAAW,EACtCK,EAAgBN,EAAaD,EAAU,EAEvCQ,EAAgBrO,SAASiL,cAAc,UAC7CoD,EAAc/J,MAAQ6J,EACtBE,EAAc9J,OAAS6J,EACvB,MAAME,EAAaD,EAAcrK,WAAW,MAE5C,OAAI4J,IAAoBO,EAAe,IAAMC,EAAgB,IACpDvJ,QAAQE,OAAO,IAAIvI,MAAM,qBAGlC8R,EAAW/I,UAAU7E,EAAQqN,EAAUF,EAASM,EAAcC,EAAe,EAAG,EAAGD,EAAcC,GAE1F,IAAIvJ,SAAQ,CAACC,EAASC,KAC3BsJ,EAAcE,QAAQC,IAChBA,EACF1J,EAAQ0J,GAERzJ,EAAO,IAAIvI,MAAM,gCACnB,GACC,YAAY,IAEnB,EDcMiS,CAAyBhS,KAAKiE,OAAQ,CAAEkN,iBAAiB,IAAQlB,MAAKgC,UACpE,MAAMC,EAAO,IAAIC,KAAK,CAACJ,GAAO,gBAAiB,CAAEtO,KAAM,cAEjD2O,EAAW,IAAI1B,SAMrB,OAJA0B,EAASC,OAAO,OAAQH,GACxBE,EAASC,OAAO,iBAAkBrS,KAAKsS,QAAQC,MAC/CH,EAASC,OAAO,OAAQ,eAEjB/B,MAAM,mBAAoB,CAC/BE,OAAQ,OACRC,KAAM2B,IACLnC,MAAMuC,GAASA,EAAKC,SAAQxC,MAAMyC,GAC5BrK,EAAQqK,IACf,IACDC,OAAOrP,GACDgF,EAAOhF,IACd,GAEN,CAEA,gBAAIwM,GACF,OAAO9P,KAAK4S,cAAc,wBAC5B,CAEA,eAAIlD,GACF,OAAO1P,KAAK4S,cAAc,6BAC5B,CAEA,qBAAI1B,GACF,OAAOlR,KAAK4S,cAAc,mBAC5B,CAEA,UAAI3O,GACF,OAAOjE,KAAK4S,cAAc,SAC5B,CAEA,cAAIzC,GACF,OAAOnQ,KAAK4S,cAAc,wBAC5B,CAEA,QAAI/C,GACF,OAAO7P,KAAK4S,cAAc,OAC5B,CAEA,WAAI9B,GACF,OAAO9Q,KAAK4S,cAAc,WAC5B","sources":["webpack://uvtsign/./node_modules/signature_pad/dist/signature_pad.js","webpack://uvtsign/./app/javascript/draw.js","webpack://uvtsign/./app/javascript/submission_form/crop_canvas.js"],"sourcesContent":["/*!\n * Signature Pad v4.2.0 | https://github.com/szimek/signature_pad\n * (c) 2024 Szymon Nowak | Released under the MIT license\n */\n\nclass Point {\n    constructor(x, y, pressure, time) {\n        if (isNaN(x) || isNaN(y)) {\n            throw new Error(`Point is invalid: (${x}, ${y})`);\n        }\n        this.x = +x;\n        this.y = +y;\n        this.pressure = pressure || 0;\n        this.time = time || Date.now();\n    }\n    distanceTo(start) {\n        return Math.sqrt(Math.pow(this.x - start.x, 2) + Math.pow(this.y - start.y, 2));\n    }\n    equals(other) {\n        return (this.x === other.x &&\n            this.y === other.y &&\n            this.pressure === other.pressure &&\n            this.time === other.time);\n    }\n    velocityFrom(start) {\n        return this.time !== start.time\n            ? this.distanceTo(start) / (this.time - start.time)\n            : 0;\n    }\n}\n\nclass Bezier {\n    static fromPoints(points, widths) {\n        const c2 = this.calculateControlPoints(points[0], points[1], points[2]).c2;\n        const c3 = this.calculateControlPoints(points[1], points[2], points[3]).c1;\n        return new Bezier(points[1], c2, c3, points[2], widths.start, widths.end);\n    }\n    static calculateControlPoints(s1, s2, s3) {\n        const dx1 = s1.x - s2.x;\n        const dy1 = s1.y - s2.y;\n        const dx2 = s2.x - s3.x;\n        const dy2 = s2.y - s3.y;\n        const m1 = { x: (s1.x + s2.x) / 2.0, y: (s1.y + s2.y) / 2.0 };\n        const m2 = { x: (s2.x + s3.x) / 2.0, y: (s2.y + s3.y) / 2.0 };\n        const l1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n        const l2 = Math.sqrt(dx2 * dx2 + dy2 * dy2);\n        const dxm = m1.x - m2.x;\n        const dym = m1.y - m2.y;\n        const k = l2 / (l1 + l2);\n        const cm = { x: m2.x + dxm * k, y: m2.y + dym * k };\n        const tx = s2.x - cm.x;\n        const ty = s2.y - cm.y;\n        return {\n            c1: new Point(m1.x + tx, m1.y + ty),\n            c2: new Point(m2.x + tx, m2.y + ty),\n        };\n    }\n    constructor(startPoint, control2, control1, endPoint, startWidth, endWidth) {\n        this.startPoint = startPoint;\n        this.control2 = control2;\n        this.control1 = control1;\n        this.endPoint = endPoint;\n        this.startWidth = startWidth;\n        this.endWidth = endWidth;\n    }\n    length() {\n        const steps = 10;\n        let length = 0;\n        let px;\n        let py;\n        for (let i = 0; i <= steps; i += 1) {\n            const t = i / steps;\n            const cx = this.point(t, this.startPoint.x, this.control1.x, this.control2.x, this.endPoint.x);\n            const cy = this.point(t, this.startPoint.y, this.control1.y, this.control2.y, this.endPoint.y);\n            if (i > 0) {\n                const xdiff = cx - px;\n                const ydiff = cy - py;\n                length += Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n            }\n            px = cx;\n            py = cy;\n        }\n        return length;\n    }\n    point(t, start, c1, c2, end) {\n        return (start * (1.0 - t) * (1.0 - t) * (1.0 - t))\n            + (3.0 * c1 * (1.0 - t) * (1.0 - t) * t)\n            + (3.0 * c2 * (1.0 - t) * t * t)\n            + (end * t * t * t);\n    }\n}\n\nclass SignatureEventTarget {\n    constructor() {\n        try {\n            this._et = new EventTarget();\n        }\n        catch (error) {\n            this._et = document;\n        }\n    }\n    addEventListener(type, listener, options) {\n        this._et.addEventListener(type, listener, options);\n    }\n    dispatchEvent(event) {\n        return this._et.dispatchEvent(event);\n    }\n    removeEventListener(type, callback, options) {\n        this._et.removeEventListener(type, callback, options);\n    }\n}\n\nfunction throttle(fn, wait = 250) {\n    let previous = 0;\n    let timeout = null;\n    let result;\n    let storedContext;\n    let storedArgs;\n    const later = () => {\n        previous = Date.now();\n        timeout = null;\n        result = fn.apply(storedContext, storedArgs);\n        if (!timeout) {\n            storedContext = null;\n            storedArgs = [];\n        }\n    };\n    return function wrapper(...args) {\n        const now = Date.now();\n        const remaining = wait - (now - previous);\n        storedContext = this;\n        storedArgs = args;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            result = fn.apply(storedContext, storedArgs);\n            if (!timeout) {\n                storedContext = null;\n                storedArgs = [];\n            }\n        }\n        else if (!timeout) {\n            timeout = window.setTimeout(later, remaining);\n        }\n        return result;\n    };\n}\n\nclass SignaturePad extends SignatureEventTarget {\n    constructor(canvas, options = {}) {\n        super();\n        this.canvas = canvas;\n        this._drawingStroke = false;\n        this._isEmpty = true;\n        this._lastPoints = [];\n        this._data = [];\n        this._lastVelocity = 0;\n        this._lastWidth = 0;\n        this._handleMouseDown = (event) => {\n            if (event.buttons === 1) {\n                this._strokeBegin(event);\n            }\n        };\n        this._handleMouseMove = (event) => {\n            this._strokeMoveUpdate(event);\n        };\n        this._handleMouseUp = (event) => {\n            if (event.buttons === 1) {\n                this._strokeEnd(event);\n            }\n        };\n        this._handleTouchStart = (event) => {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            if (event.targetTouches.length === 1) {\n                const touch = event.changedTouches[0];\n                this._strokeBegin(touch);\n            }\n        };\n        this._handleTouchMove = (event) => {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            const touch = event.targetTouches[0];\n            this._strokeMoveUpdate(touch);\n        };\n        this._handleTouchEnd = (event) => {\n            const wasCanvasTouched = event.target === this.canvas;\n            if (wasCanvasTouched) {\n                if (event.cancelable) {\n                    event.preventDefault();\n                }\n                const touch = event.changedTouches[0];\n                this._strokeEnd(touch);\n            }\n        };\n        this._handlePointerStart = (event) => {\n            event.preventDefault();\n            this._strokeBegin(event);\n        };\n        this._handlePointerMove = (event) => {\n            this._strokeMoveUpdate(event);\n        };\n        this._handlePointerEnd = (event) => {\n            if (this._drawingStroke) {\n                event.preventDefault();\n                this._strokeEnd(event);\n            }\n        };\n        this.velocityFilterWeight = options.velocityFilterWeight || 0.7;\n        this.minWidth = options.minWidth || 0.5;\n        this.maxWidth = options.maxWidth || 2.5;\n        this.throttle = ('throttle' in options ? options.throttle : 16);\n        this.minDistance = ('minDistance' in options ? options.minDistance : 5);\n        this.dotSize = options.dotSize || 0;\n        this.penColor = options.penColor || 'black';\n        this.backgroundColor = options.backgroundColor || 'rgba(0,0,0,0)';\n        this.compositeOperation = options.compositeOperation || 'source-over';\n        this.canvasContextOptions = ('canvasContextOptions' in options ? options.canvasContextOptions : {});\n        this._strokeMoveUpdate = this.throttle\n            ? throttle(SignaturePad.prototype._strokeUpdate, this.throttle)\n            : SignaturePad.prototype._strokeUpdate;\n        this._ctx = canvas.getContext('2d', this.canvasContextOptions);\n        this.clear();\n        this.on();\n    }\n    clear() {\n        const { _ctx: ctx, canvas } = this;\n        ctx.fillStyle = this.backgroundColor;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        this._data = [];\n        this._reset(this._getPointGroupOptions());\n        this._isEmpty = true;\n    }\n    fromDataURL(dataUrl, options = {}) {\n        return new Promise((resolve, reject) => {\n            const image = new Image();\n            const ratio = options.ratio || window.devicePixelRatio || 1;\n            const width = options.width || this.canvas.width / ratio;\n            const height = options.height || this.canvas.height / ratio;\n            const xOffset = options.xOffset || 0;\n            const yOffset = options.yOffset || 0;\n            this._reset(this._getPointGroupOptions());\n            image.onload = () => {\n                this._ctx.drawImage(image, xOffset, yOffset, width, height);\n                resolve();\n            };\n            image.onerror = (error) => {\n                reject(error);\n            };\n            image.crossOrigin = 'anonymous';\n            image.src = dataUrl;\n            this._isEmpty = false;\n        });\n    }\n    toDataURL(type = 'image/png', encoderOptions) {\n        switch (type) {\n            case 'image/svg+xml':\n                if (typeof encoderOptions !== 'object') {\n                    encoderOptions = undefined;\n                }\n                return `data:image/svg+xml;base64,${btoa(this.toSVG(encoderOptions))}`;\n            default:\n                if (typeof encoderOptions !== 'number') {\n                    encoderOptions = undefined;\n                }\n                return this.canvas.toDataURL(type, encoderOptions);\n        }\n    }\n    on() {\n        this.canvas.style.touchAction = 'none';\n        this.canvas.style.msTouchAction = 'none';\n        this.canvas.style.userSelect = 'none';\n        const isIOS = /Macintosh/.test(navigator.userAgent) && 'ontouchstart' in document;\n        if (window.PointerEvent && !isIOS) {\n            this._handlePointerEvents();\n        }\n        else {\n            this._handleMouseEvents();\n            if ('ontouchstart' in window) {\n                this._handleTouchEvents();\n            }\n        }\n    }\n    off() {\n        this.canvas.style.touchAction = 'auto';\n        this.canvas.style.msTouchAction = 'auto';\n        this.canvas.style.userSelect = 'auto';\n        this.canvas.removeEventListener('pointerdown', this._handlePointerStart);\n        this.canvas.removeEventListener('pointermove', this._handlePointerMove);\n        this.canvas.ownerDocument.removeEventListener('pointerup', this._handlePointerEnd);\n        this.canvas.removeEventListener('mousedown', this._handleMouseDown);\n        this.canvas.removeEventListener('mousemove', this._handleMouseMove);\n        this.canvas.ownerDocument.removeEventListener('mouseup', this._handleMouseUp);\n        this.canvas.removeEventListener('touchstart', this._handleTouchStart);\n        this.canvas.removeEventListener('touchmove', this._handleTouchMove);\n        this.canvas.removeEventListener('touchend', this._handleTouchEnd);\n    }\n    isEmpty() {\n        return this._isEmpty;\n    }\n    fromData(pointGroups, { clear = true } = {}) {\n        if (clear) {\n            this.clear();\n        }\n        this._fromData(pointGroups, this._drawCurve.bind(this), this._drawDot.bind(this));\n        this._data = this._data.concat(pointGroups);\n    }\n    toData() {\n        return this._data;\n    }\n    _getPointGroupOptions(group) {\n        return {\n            penColor: group && 'penColor' in group ? group.penColor : this.penColor,\n            dotSize: group && 'dotSize' in group ? group.dotSize : this.dotSize,\n            minWidth: group && 'minWidth' in group ? group.minWidth : this.minWidth,\n            maxWidth: group && 'maxWidth' in group ? group.maxWidth : this.maxWidth,\n            velocityFilterWeight: group && 'velocityFilterWeight' in group\n                ? group.velocityFilterWeight\n                : this.velocityFilterWeight,\n            compositeOperation: group && 'compositeOperation' in group\n                ? group.compositeOperation\n                : this.compositeOperation,\n        };\n    }\n    _strokeBegin(event) {\n        const cancelled = !this.dispatchEvent(new CustomEvent('beginStroke', { detail: event, cancelable: true }));\n        if (cancelled) {\n            return;\n        }\n        this._drawingStroke = true;\n        const pointGroupOptions = this._getPointGroupOptions();\n        const newPointGroup = Object.assign(Object.assign({}, pointGroupOptions), { points: [] });\n        this._data.push(newPointGroup);\n        this._reset(pointGroupOptions);\n        this._strokeUpdate(event);\n    }\n    _strokeUpdate(event) {\n        if (!this._drawingStroke) {\n            return;\n        }\n        if (this._data.length === 0) {\n            this._strokeBegin(event);\n            return;\n        }\n        this.dispatchEvent(new CustomEvent('beforeUpdateStroke', { detail: event }));\n        const x = event.clientX;\n        const y = event.clientY;\n        const pressure = event.pressure !== undefined\n            ? event.pressure\n            : event.force !== undefined\n                ? event.force\n                : 0;\n        const point = this._createPoint(x, y, pressure);\n        const lastPointGroup = this._data[this._data.length - 1];\n        const lastPoints = lastPointGroup.points;\n        const lastPoint = lastPoints.length > 0 && lastPoints[lastPoints.length - 1];\n        const isLastPointTooClose = lastPoint\n            ? point.distanceTo(lastPoint) <= this.minDistance\n            : false;\n        const pointGroupOptions = this._getPointGroupOptions(lastPointGroup);\n        if (!lastPoint || !(lastPoint && isLastPointTooClose)) {\n            const curve = this._addPoint(point, pointGroupOptions);\n            if (!lastPoint) {\n                this._drawDot(point, pointGroupOptions);\n            }\n            else if (curve) {\n                this._drawCurve(curve, pointGroupOptions);\n            }\n            lastPoints.push({\n                time: point.time,\n                x: point.x,\n                y: point.y,\n                pressure: point.pressure,\n            });\n        }\n        this.dispatchEvent(new CustomEvent('afterUpdateStroke', { detail: event }));\n    }\n    _strokeEnd(event) {\n        if (!this._drawingStroke) {\n            return;\n        }\n        this._strokeUpdate(event);\n        this._drawingStroke = false;\n        this.dispatchEvent(new CustomEvent('endStroke', { detail: event }));\n    }\n    _handlePointerEvents() {\n        this._drawingStroke = false;\n        this.canvas.addEventListener('pointerdown', this._handlePointerStart);\n        this.canvas.addEventListener('pointermove', this._handlePointerMove);\n        this.canvas.ownerDocument.addEventListener('pointerup', this._handlePointerEnd);\n    }\n    _handleMouseEvents() {\n        this._drawingStroke = false;\n        this.canvas.addEventListener('mousedown', this._handleMouseDown);\n        this.canvas.addEventListener('mousemove', this._handleMouseMove);\n        this.canvas.ownerDocument.addEventListener('mouseup', this._handleMouseUp);\n    }\n    _handleTouchEvents() {\n        this.canvas.addEventListener('touchstart', this._handleTouchStart);\n        this.canvas.addEventListener('touchmove', this._handleTouchMove);\n        this.canvas.addEventListener('touchend', this._handleTouchEnd);\n    }\n    _reset(options) {\n        this._lastPoints = [];\n        this._lastVelocity = 0;\n        this._lastWidth = (options.minWidth + options.maxWidth) / 2;\n        this._ctx.fillStyle = options.penColor;\n        this._ctx.globalCompositeOperation = options.compositeOperation;\n    }\n    _createPoint(x, y, pressure) {\n        const rect = this.canvas.getBoundingClientRect();\n        return new Point(x - rect.left, y - rect.top, pressure, new Date().getTime());\n    }\n    _addPoint(point, options) {\n        const { _lastPoints } = this;\n        _lastPoints.push(point);\n        if (_lastPoints.length > 2) {\n            if (_lastPoints.length === 3) {\n                _lastPoints.unshift(_lastPoints[0]);\n            }\n            const widths = this._calculateCurveWidths(_lastPoints[1], _lastPoints[2], options);\n            const curve = Bezier.fromPoints(_lastPoints, widths);\n            _lastPoints.shift();\n            return curve;\n        }\n        return null;\n    }\n    _calculateCurveWidths(startPoint, endPoint, options) {\n        const velocity = options.velocityFilterWeight * endPoint.velocityFrom(startPoint) +\n            (1 - options.velocityFilterWeight) * this._lastVelocity;\n        const newWidth = this._strokeWidth(velocity, options);\n        const widths = {\n            end: newWidth,\n            start: this._lastWidth,\n        };\n        this._lastVelocity = velocity;\n        this._lastWidth = newWidth;\n        return widths;\n    }\n    _strokeWidth(velocity, options) {\n        return Math.max(options.maxWidth / (velocity + 1), options.minWidth);\n    }\n    _drawCurveSegment(x, y, width) {\n        const ctx = this._ctx;\n        ctx.moveTo(x, y);\n        ctx.arc(x, y, width, 0, 2 * Math.PI, false);\n        this._isEmpty = false;\n    }\n    _drawCurve(curve, options) {\n        const ctx = this._ctx;\n        const widthDelta = curve.endWidth - curve.startWidth;\n        const drawSteps = Math.ceil(curve.length()) * 2;\n        ctx.beginPath();\n        ctx.fillStyle = options.penColor;\n        for (let i = 0; i < drawSteps; i += 1) {\n            const t = i / drawSteps;\n            const tt = t * t;\n            const ttt = tt * t;\n            const u = 1 - t;\n            const uu = u * u;\n            const uuu = uu * u;\n            let x = uuu * curve.startPoint.x;\n            x += 3 * uu * t * curve.control1.x;\n            x += 3 * u * tt * curve.control2.x;\n            x += ttt * curve.endPoint.x;\n            let y = uuu * curve.startPoint.y;\n            y += 3 * uu * t * curve.control1.y;\n            y += 3 * u * tt * curve.control2.y;\n            y += ttt * curve.endPoint.y;\n            const width = Math.min(curve.startWidth + ttt * widthDelta, options.maxWidth);\n            this._drawCurveSegment(x, y, width);\n        }\n        ctx.closePath();\n        ctx.fill();\n    }\n    _drawDot(point, options) {\n        const ctx = this._ctx;\n        const width = options.dotSize > 0\n            ? options.dotSize\n            : (options.minWidth + options.maxWidth) / 2;\n        ctx.beginPath();\n        this._drawCurveSegment(point.x, point.y, width);\n        ctx.closePath();\n        ctx.fillStyle = options.penColor;\n        ctx.fill();\n    }\n    _fromData(pointGroups, drawCurve, drawDot) {\n        for (const group of pointGroups) {\n            const { points } = group;\n            const pointGroupOptions = this._getPointGroupOptions(group);\n            if (points.length > 1) {\n                for (let j = 0; j < points.length; j += 1) {\n                    const basicPoint = points[j];\n                    const point = new Point(basicPoint.x, basicPoint.y, basicPoint.pressure, basicPoint.time);\n                    if (j === 0) {\n                        this._reset(pointGroupOptions);\n                    }\n                    const curve = this._addPoint(point, pointGroupOptions);\n                    if (curve) {\n                        drawCurve(curve, pointGroupOptions);\n                    }\n                }\n            }\n            else {\n                this._reset(pointGroupOptions);\n                drawDot(points[0], pointGroupOptions);\n            }\n        }\n    }\n    toSVG({ includeBackgroundColor = false } = {}) {\n        const pointGroups = this._data;\n        const ratio = Math.max(window.devicePixelRatio || 1, 1);\n        const minX = 0;\n        const minY = 0;\n        const maxX = this.canvas.width / ratio;\n        const maxY = this.canvas.height / ratio;\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        svg.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttribute('viewBox', `${minX} ${minY} ${maxX} ${maxY}`);\n        svg.setAttribute('width', maxX.toString());\n        svg.setAttribute('height', maxY.toString());\n        if (includeBackgroundColor && this.backgroundColor) {\n            const rect = document.createElement('rect');\n            rect.setAttribute('width', '100%');\n            rect.setAttribute('height', '100%');\n            rect.setAttribute('fill', this.backgroundColor);\n            svg.appendChild(rect);\n        }\n        this._fromData(pointGroups, (curve, { penColor }) => {\n            const path = document.createElement('path');\n            if (!isNaN(curve.control1.x) &&\n                !isNaN(curve.control1.y) &&\n                !isNaN(curve.control2.x) &&\n                !isNaN(curve.control2.y)) {\n                const attr = `M ${curve.startPoint.x.toFixed(3)},${curve.startPoint.y.toFixed(3)} ` +\n                    `C ${curve.control1.x.toFixed(3)},${curve.control1.y.toFixed(3)} ` +\n                    `${curve.control2.x.toFixed(3)},${curve.control2.y.toFixed(3)} ` +\n                    `${curve.endPoint.x.toFixed(3)},${curve.endPoint.y.toFixed(3)}`;\n                path.setAttribute('d', attr);\n                path.setAttribute('stroke-width', (curve.endWidth * 2.25).toFixed(3));\n                path.setAttribute('stroke', penColor);\n                path.setAttribute('fill', 'none');\n                path.setAttribute('stroke-linecap', 'round');\n                svg.appendChild(path);\n            }\n        }, (point, { penColor, dotSize, minWidth, maxWidth }) => {\n            const circle = document.createElement('circle');\n            const size = dotSize > 0 ? dotSize : (minWidth + maxWidth) / 2;\n            circle.setAttribute('r', size.toString());\n            circle.setAttribute('cx', point.x.toString());\n            circle.setAttribute('cy', point.y.toString());\n            circle.setAttribute('fill', penColor);\n            svg.appendChild(circle);\n        });\n        return svg.outerHTML;\n    }\n}\n\nexport { SignaturePad as default };\n//# sourceMappingURL=signature_pad.js.map\n","import SignaturePad from 'signature_pad'\nimport { cropCanvasAndExportToPNG } from './submission_form/crop_canvas'\n\nwindow.customElements.define('draw-signature', class extends HTMLElement {\n  connectedCallback () {\n    const scale = 3\n\n    this.canvas.width = this.canvas.parentNode.clientWidth * scale\n    this.canvas.height = this.canvas.parentNode.clientHeight * scale\n\n    this.canvas.getContext('2d').scale(scale, scale)\n\n    this.pad = new SignaturePad(this.canvas)\n\n    this.pad.addEventListener('endStroke', () => {\n      this.updateSubmitButtonVisibility()\n    })\n\n    this.clearButton.addEventListener('click', (e) => {\n      e.preventDefault()\n\n      this.clearSignaturePad()\n    })\n\n    this.form.addEventListener('submit', (e) => {\n      e.preventDefault()\n\n      this.submitButton.disabled = true\n\n      this.submitImage().then((data) => {\n        this.valueInput.value = data.uuid\n\n        return fetch(this.form.action, {\n          method: 'PUT',\n          body: new FormData(this.form)\n        }).then((response) => {\n          this.form.classList.add('hidden')\n          this.success.classList.remove('hidden')\n\n          return response\n        })\n      }).finally(() => {\n        this.submitButton.disabled = false\n      })\n    })\n  }\n\n  clearSignaturePad () {\n    this.pad.clear()\n    this.updateSubmitButtonVisibility()\n  }\n\n  updateSubmitButtonVisibility () {\n    if (this.pad.isEmpty()) {\n      this.submitButton.style.display = 'none'\n      this.placeholderButton.style.display = 'block'\n    } else {\n      this.submitButton.style.display = 'block'\n      this.placeholderButton.style.display = 'none'\n    }\n  }\n\n  async submitImage () {\n    return new Promise((resolve, reject) => {\n      cropCanvasAndExportToPNG(this.canvas, { errorOnTooSmall: true }).then(async (blob) => {\n        const file = new File([blob], 'signature.png', { type: 'image/png' })\n\n        const formData = new FormData()\n\n        formData.append('file', file)\n        formData.append('submitter_slug', this.dataset.slug)\n        formData.append('name', 'attachments')\n\n        return fetch('/api/attachments', {\n          method: 'POST',\n          body: formData\n        }).then((resp) => resp.json()).then((attachment) => {\n          return resolve(attachment)\n        })\n      }).catch((error) => {\n        return reject(error)\n      })\n    })\n  }\n\n  get submitButton () {\n    return this.querySelector('button[type=\"submit\"]')\n  }\n\n  get clearButton () {\n    return this.querySelector('button[aria-label=\"Clear\"]')\n  }\n\n  get placeholderButton () {\n    return this.querySelector('button[disabled]')\n  }\n\n  get canvas () {\n    return this.querySelector('canvas')\n  }\n\n  get valueInput () {\n    return this.querySelector('input[name^=\"values\"]')\n  }\n\n  get form () {\n    return this.querySelector('form')\n  }\n\n  get success () {\n    return this.querySelector('#success')\n  }\n})\n","function cropCanvasAndExportToPNG (canvas, { errorOnTooSmall } = { errorOnTooSmall: false }) {\n  const ctx = canvas.getContext('2d')\n\n  const width = canvas.width\n  const height = canvas.height\n\n  let topmost = height\n  let bottommost = 0\n  let leftmost = width\n  let rightmost = 0\n\n  const imageData = ctx.getImageData(0, 0, width, height)\n  const pixels = imageData.data\n\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const pixelIndex = (y * width + x) * 4\n      const alpha = pixels[pixelIndex + 3]\n      if (alpha !== 0) {\n        topmost = Math.min(topmost, y)\n        bottommost = Math.max(bottommost, y)\n        leftmost = Math.min(leftmost, x)\n        rightmost = Math.max(rightmost, x)\n      }\n    }\n  }\n\n  const croppedWidth = rightmost - leftmost + 1\n  const croppedHeight = bottommost - topmost + 1\n\n  const croppedCanvas = document.createElement('canvas')\n  croppedCanvas.width = croppedWidth\n  croppedCanvas.height = croppedHeight\n  const croppedCtx = croppedCanvas.getContext('2d')\n\n  if (errorOnTooSmall && (croppedWidth < 20 || croppedHeight < 20)) {\n    return Promise.reject(new Error('Image too small'))\n  }\n\n  croppedCtx.drawImage(canvas, leftmost, topmost, croppedWidth, croppedHeight, 0, 0, croppedWidth, croppedHeight)\n\n  return new Promise((resolve, reject) => {\n    croppedCanvas.toBlob((blob) => {\n      if (blob) {\n        resolve(blob)\n      } else {\n        reject(new Error('Failed to create a PNG blob.'))\n      }\n    }, 'image/png')\n  })\n}\n\nexport { cropCanvasAndExportToPNG }\n"],"names":["Point","constructor","x","y","pressure","time","isNaN","Error","this","Date","now","distanceTo","start","Math","sqrt","pow","equals","other","velocityFrom","Bezier","fromPoints","points","widths","c2","calculateControlPoints","c3","c1","end","s1","s2","s3","dx1","dy1","dx2","dy2","m1","m2","l1","l2","k","cm","tx","ty","startPoint","control2","control1","endPoint","startWidth","endWidth","length","px","py","i","t","cx","point","cy","xdiff","ydiff","SignatureEventTarget","_et","EventTarget","error","document","addEventListener","type","listener","options","dispatchEvent","event","removeEventListener","callback","SignaturePad","canvas","super","_drawingStroke","_isEmpty","_lastPoints","_data","_lastVelocity","_lastWidth","_handleMouseDown","buttons","_strokeBegin","_handleMouseMove","_strokeMoveUpdate","_handleMouseUp","_strokeEnd","_handleTouchStart","cancelable","preventDefault","targetTouches","touch","changedTouches","_handleTouchMove","_handleTouchEnd","target","_handlePointerStart","_handlePointerMove","_handlePointerEnd","velocityFilterWeight","minWidth","maxWidth","throttle","minDistance","dotSize","penColor","backgroundColor","compositeOperation","canvasContextOptions","fn","wait","result","storedContext","storedArgs","previous","timeout","later","apply","args","remaining","clearTimeout","window","setTimeout","prototype","_strokeUpdate","_ctx","getContext","clear","on","ctx","fillStyle","clearRect","width","height","fillRect","_reset","_getPointGroupOptions","fromDataURL","dataUrl","Promise","resolve","reject","image","Image","ratio","devicePixelRatio","xOffset","yOffset","onload","drawImage","onerror","crossOrigin","src","toDataURL","encoderOptions","undefined","btoa","toSVG","style","touchAction","msTouchAction","userSelect","isIOS","test","navigator","userAgent","PointerEvent","_handlePointerEvents","_handleMouseEvents","_handleTouchEvents","off","ownerDocument","isEmpty","fromData","pointGroups","_fromData","_drawCurve","bind","_drawDot","concat","toData","group","CustomEvent","detail","pointGroupOptions","newPointGroup","Object","assign","push","clientX","clientY","force","_createPoint","lastPointGroup","lastPoints","lastPoint","isLastPointTooClose","curve","_addPoint","globalCompositeOperation","rect","getBoundingClientRect","left","top","getTime","unshift","_calculateCurveWidths","shift","velocity","newWidth","_strokeWidth","max","_drawCurveSegment","moveTo","arc","PI","widthDelta","drawSteps","ceil","beginPath","tt","ttt","u","uu","uuu","min","closePath","fill","drawCurve","drawDot","j","basicPoint","includeBackgroundColor","maxX","maxY","svg","createElementNS","setAttribute","toString","createElement","appendChild","path","attr","toFixed","circle","size","outerHTML","customElements","define","HTMLElement","connectedCallback","parentNode","clientWidth","clientHeight","scale","pad","updateSubmitButtonVisibility","clearButton","e","clearSignaturePad","form","submitButton","disabled","submitImage","then","data","valueInput","value","uuid","fetch","action","method","body","FormData","response","classList","add","success","remove","finally","display","placeholderButton","errorOnTooSmall","topmost","bottommost","leftmost","rightmost","pixels","getImageData","croppedWidth","croppedHeight","croppedCanvas","croppedCtx","toBlob","blob","cropCanvasAndExportToPNG","async","file","File","formData","append","dataset","slug","resp","json","attachment","catch","querySelector"],"sourceRoot":""}