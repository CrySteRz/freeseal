services:
  app:
    depends_on:
      postgres:
        condition: service_healthy
    image: crysterz/uvtsign:latest
    ports:
      - 3000:3000
    volumes:
      - .:/data
    environment:
      - HOST=${HOST}
      - DATABASE_URL=${DATABASE_URL}
      - SMTP_ADDRESS=${SMTP_ADDRESS}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_DOMAIN=${SMTP_DOMAIN}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_AUTHENTICATION=${SMTP_AUTHENTICATION}
      - SMTP_ENABLE_STARTTLS_AUTO=${SMTP_ENABLE_STARTTLS_AUTO}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      #FORCE_SSL=${HOST}
  postgres:
    image: postgres:15
    volumes:
      - "./pg_data:/var/lib/postgresql/data"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=uvtsign
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  caddy:
    image: caddy:latest
    command: caddy reverse-proxy --from http://${HOST} --to http://app:3000
    ports:
      - 80:80
    volumes:
      - .:/data
